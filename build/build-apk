#!/bin/bash
set -ex
# trap 'err_report echo "error: ${BASH_SOURCE}":"${LINENO}"' exit 1

cd $HOME

export PATH=/opt/helpers:$PATH
export PERSIST=1

# we get the repositories for the dependencies
git clone kde:sysadmin/ci-tooling || true
pushd ci-tooling
git clone kde:sysadmin/repo-metadata || true
git clone kde:kde-build-metadata || true
popd

for i in kconfig kcoreaddons kguiaddons ki18n kirigami; do
	# we figure out the dependencies
	arguments=$(python3 ci-tooling/helpers/getsetting.py --project $i --product Frameworks --platform AndroidQt5.11 --key cmake-options)
	build-cmake $i kde:$i $arguments -DBUILD_TESTING=OFF -GNinja $EXTRA
done

export package=mycroft-gui

wget https://files.xenon.pangea.pub/android/skills.tar.gz -O /tmp/skills.tar.gz
pushd $HOME/src/mycroft-gui
tar xvf /tmp/skills.tar.gz
popd

# first we download the project and look for the manifest file
manifestFile=`find $(pwd)/src/$package -name AndroidManifest.xml`

if [ -n "$manifestFile" ]
then
    targetname=`python3 /opt/helpers/target-from-manifest.py $manifestFile | tr '\n' ';' | head -c -1`
    EXTRA+=-DANDROID_APK_DIR=$(dirname $manifestFile | tr '\n' ';' | head -c -1 )
fi

if [[ -z "$targetname" || "$targetname" =~ ".*%%.*" ]]
then
    appdataFile=$(find $(pwd)/src/$package -name "*.appdata.xml")
    if [[ -z "$appdataFile" ]]; then
        echo "error: No AndroidManifest.xml or *.appdata.xml file :("
        exit 1
    fi
    targetname=`python3 /opt/helpers/target-from-appdata.py $appdataFile | tr '\n' ';' | head -c -1`
fi
arguments=$(python3 ci-tooling/helpers/getsetting.py --project $package --product Applications --platform AndroidQt5.11 --key cmake-options)

build-cmake $package kde:$package -DQTANDROID_EXPORTED_TARGET=$targetname $EXTRA $arguments $@
pushd build/$package

if [ -f /keys/${package}keystore-config ]; then
    ARGS="`cat /keys/${package}keystore-config` $ARGS" make create-apk
elif [ -f /keys/androidkeystore-config ]; then
    ARGS="`cat /keys/androidkeystore-config` $ARGS" make create-apk
else
    make create-apk
fi

if [ -d /output ]
then
    sudo chown user /output || true
    cp *_build_apk/build/outputs/apk/*.apk /output
    rm -r $HOME/src/mycroft-gui/skills-extra/
fi

exit 0
